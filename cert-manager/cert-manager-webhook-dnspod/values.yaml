# The GroupName here is used to identify your company or business unit that
# created this webhook.
# For example, this may be "acme.mycompany.com".
# This name will need to be referenced in each Issuer's `webhook` stanza to
# inform cert-manager of where to send ChallengePayload resources in order to
# solve the DNS01 challenge.
# This group name should be **unique**, hence using your own company's domain
# here is recommended.
groupName: cert-manager.io

certManager:
  namespace: cert-manager
  serviceAccountName: cert-manager

image:
  repository: imroc/cert-manager-webhook-dnspod
# tag: latest
  digest: sha256:12f7dc12c8add337dc793f0f27ecb662596b72dbee405d7b915fad78fe3cb223
  pullPolicy: Always

clusterIssuer:
  enabled: true
  name: dnspod
  ttl: 600
  staging: false
  # secretId: # Replace with your Tencent Cloud Secret ID (format: AKIDxxxx...)
  # secretKey: # Replace with your Tencent Cloud Secret Key
  email: user@example.com

  # https://cert-manager.io/docs/configuration/acme/#adding-multiple-solver-types
  #selector:
  #  dnsZones:
  #    - 'example.com'

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 443

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: 
- key: node-role.kubernetes.io/master
  operator: Exists
  effect: NoSchedule

      
affinity: 
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: role
          operator: In
          values:
          - worker
